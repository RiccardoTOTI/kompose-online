name: Deploy to Heroku and Create Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Get version from package.json
        id: get_version
        run: |
          echo "VERSION=$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.get_version.outputs.VERSION }} \
            --title "Release v${{ steps.get_version.outputs.VERSION }}" \
            --notes "$(git log -1 --pretty=format:%s)" \
            --target ${{ github.sha }}

      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Set Heroku stack to container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: heroku stack:set container -a $HEROKU_APP_NAME

      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          heroku container:push web -a $HEROKU_APP_NAME
          heroku container:release web -a $HEROKU_APP_NAME

      - name: Set environment variables
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          heroku config:set FLASK_ENV=production -a $HEROKU_APP_NAME
          heroku config:set SECRET_KEY=${{ secrets.SECRET_KEY }} -a $HEROKU_APP_NAME
